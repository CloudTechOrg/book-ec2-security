{
    "Comment": "A description of my state machine",
    "StartAt": "StartBackupJob",
    "States": {
      "StartBackupJob": {
        "Type": "Task",
        "Next": "Wait 30s for StartBackupJob",
        "Parameters": {
          "BackupVaultName.$": "$$.Execution.Input.BackupVaultName",
          "IamRoleArn": "arn:aws:iam::{AWSアカウントID}:role/cloudtech-hands-on-backup-role",
          "ResourceArn.$": "States.Format('arn:aws:ec2:ap-northeast-1:{AWSアカウントID}:instance/{}', $$.Execution.Input.InstanceId[0])",
          "Lifecycle": {
            "DeleteAfterDays": 30
          },
          "RecoveryPointTags": {
            "vulnerability-management.$": "$$.Execution.StartTime"
          }
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:startBackupJob",
        "ResultSelector": {
          "BackupJobId.$": "$.BackupJobId"
        }
      },
      "Wait 30s for StartBackupJob": {
        "Type": "Wait",
        "Seconds": 30,
        "Next": "DescribeBackupJob"
      },
      "DescribeBackupJob": {
        "Type": "Task",
        "Parameters": {
          "BackupJobId.$": "$.BackupJobId"
        },
        "Resource": "arn:aws:states:::aws-sdk:backup:describeBackupJob",
        "Next": "Choice StartBackupJob Results",
        "ResultSelector": {
          "BackupJobId.$": "$.BackupJobId",
          "State.$": "$.State"
        }
      },
      "Choice StartBackupJob Results": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.State",
            "StringMatches": "COMPLETED",
            "Next": "RunPatchBaseline with SendCommand"
          },
          {
            "Or": [
              {
                "Variable": "$.State",
                "StringMatches": "PENDING"
              },
              {
                "Variable": "$.State",
                "StringMatches": "RUNNING"
              },
              {
                "Variable": "$.State",
                "StringMatches": "CREATED"
              }
            ],
            "Next": "Wait 30s for StartBackupJob"
          }
        ],
        "Default": "Failed StartBackupJob"
      },
      "RunPatchBaseline with SendCommand": {
        "Type": "Task",
        "Parameters": {
          "DocumentName": "AWS-RunPatchBaseline",
          "InstanceIds.$": "$$.Execution.Input.InstanceId",
          "Parameters": {
            "Operation": [
              "Install"
            ]
          },
          "OutputS3BucketName": "cloudtech-hands-on-bucket-YYYYMMDD",
          "OutputS3KeyPrefix": "runcommand_log/",
          "OutputS3Region": "ap-northeast-1",
          "ServiceRoleArn": "arn:aws:iam::{AWSアカウントID}:role/cloudtech-hands-on-runcommand-role"
        },
        "Resource": "arn:aws:states:::aws-sdk:ssm:sendCommand",
        "Next": "Wait 30s for RunPatchBaseline",
        "ResultSelector": {
          "CommandId.$": "$.Command.CommandId"
        }
      },
      "Wait 30s for RunPatchBaseline": {
        "Type": "Wait",
        "Seconds": 30,
        "Next": "ListCommands for RunPatchBaseline"
      },
      "ListCommands for RunPatchBaseline": {
        "Type": "Task",
        "Parameters": {
          "CommandId.$": "$.CommandId"
        },
        "Resource": "arn:aws:states:::aws-sdk:ssm:listCommands",
        "Next": "Choice RunPatchBaseline Results",
        "ResultSelector": {
          "CommandId.$": "$.Commands[0].CommandId",
          "Status.$": "$.Commands[0].Status "
        }
      },
      "Choice RunPatchBaseline Results": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.Status",
            "StringMatches": "Success",
            "Next": "Check with SendCommand"
          },
          {
            "Or": [
              {
                "Variable": "$.Status",
                "StringMatches": "Pending"
              },
              {
                "Variable": "$.Status",
                "StringMatches": "InProgress"
              }
            ],
            "Next": "Wait 30s for RunPatchBaseline"
          }
        ],
        "Default": "Failed SendCommand"
      },
      "Check with SendCommand": {
        "Type": "Task",
        "Next": "Wait 10s for Check",
        "Parameters": {
          "DocumentName": "cloudtech-hands-on-runcommand",
          "InstanceIds.$": "$$.Execution.Input.InstanceId",
          "OutputS3BucketName": "cloudtech-hands-on-bucket-YYYYMMDD",
          "OutputS3KeyPrefix": "runcommand_log/",
          "OutputS3Region": "ap-northeast-1",
          "ServiceRoleArn": "arn:aws:iam::{AWSアカウントID}:role/cloudtech-hands-on-runcommand-role"
        },
        "Resource": "arn:aws:states:::aws-sdk:ssm:sendCommand",
        "ResultSelector": {
          "CommandId.$": "$.Command.CommandId"
        }
      },
      "Wait 10s for Check": {
        "Type": "Wait",
        "Seconds": 5,
        "Next": "ListCommands for Check"
      },
      "ListCommands for Check": {
        "Type": "Task",
        "Next": "Choice",
        "Parameters": {
          "CommandId.$": "$.CommandId"
        },
        "Resource": "arn:aws:states:::aws-sdk:ssm:listCommands",
        "ResultSelector": {
          "CommandId.$": "$.Commands[0].CommandId",
          "Status.$": "$.Commands[0].Status "
        }
      },
      "Choice": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.Status",
            "StringMatches": "Success",
            "Next": "Success"
          },
          {
            "Or": [
              {
                "Variable": "$.Status",
                "StringMatches": "Pending"
              },
              {
                "Variable": "$.Status",
                "StringMatches": "InProgress"
              }
            ],
            "Next": "Wait 10s for Check"
          }
        ],
        "Default": "Fail"
      },
      "Fail": {
        "Type": "Fail"
      },
      "Success": {
        "Type": "Succeed"
      },
      "Failed SendCommand": {
        "Type": "Fail"
      },
      "Failed StartBackupJob": {
        "Type": "Fail"
      }
    }
  }
  